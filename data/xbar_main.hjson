// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0

{ name: "main",
  type: "xbar",
  clock: "clk_sys_i", // Main clock, used in sockets
  clock_connections: {
    clk_sys_i: "main",
    clk_usb_i: "usb",
  },
  reset: "rst_sys_ni",
  reset_connections: {
    rst_sys_ni: "sys",
    rst_usb_ni: "usb",
  },
  nodes: [
    { name:  "ibex_lsu", // Load store unit
      type:  "host",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      pipeline: false,
    },
    { name:  "dbg_host", // Debug module host
      type:  "host",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      pipeline: false,
    },
    { name:  "sram", // Internal memory
      type:  "device",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      addr_range: [{
        base_addr: "0x00100000",
        size_byte: "0x00040000",
      }],
    },
    { name:  "hyperram", // HyperRAM memory
      type:  "device",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      addr_range: [{
        base_addr: "0x40000000",
        size_byte: "0x00100000",
      }],
    },
    { name:  "rev_tag", // Revocation tag memory
      type:  "device",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      addr_range: [{
        base_addr: "0x30000000",
        size_byte: "0x00004000",
      }],
    },
    { name:  "gpio", // General purpose input and output
      type:  "device",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      addr_range: [{
        base_addr: "0x80000000",
        size_byte: "0x00001000",
      }],
    },
    { name:  "pwm", // Pulse width modulator
      type:  "device",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      addr_range: [{
        base_addr: "0x80001000",
        size_byte: "0x00001000",
      }],
    },
    { name:  "rpi_gpio", // General purpose input and output for R-Pi header
      type:  "device",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      addr_range: [{
        base_addr: "0x80006000",
        size_byte: "0x00001000",
      }],
    },
    { name:  "ard_gpio", // General purpose input and output for Arduino Shield
      type:  "device",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      addr_range: [{
        base_addr: "0x80007000",
        size_byte: "0x00001000",
      }],
    },
    { name:  "pmod_gpio", // General purpose input and output for PMOD
      type:  "device",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      addr_range: [{
        base_addr: "0x80008000",
        size_byte: "0x00001000",
      }],
    },
    { name:  "rgbled_ctrl", // RGB LED Controller
      type:  "device",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      addr_range: [{
        base_addr: "0x80009000",
        size_byte: "0x00001000",
      }],
    },
    { name:  "hw_rev", // Hardware revoker control register
      type:  "device",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      addr_range: [{
        base_addr: "0x8000A000",
        size_byte: "0x00001000",
      }],
    },
    { name:  "timer", // Interrupt timer
      type:  "device",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      addr_range: [{
        base_addr: "0x80040000",
        size_byte: "0x00010000",
      }],
    },
    { name:  "uart0", // UART 0 for serial I/O
      type:  "device",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      addr_range: [{
        base_addr: "0x80100000",
        size_byte: "0x00001000",
      }],
    },
    { name:  "uart1", // UART 1 for serial I/O
      type:  "device",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      addr_range: [{
        base_addr: "0x80101000",
        size_byte: "0x00001000",
      }],
    },
    { name:  "uart2", // UART 2 for Raspberry Pi HAT
      type:  "device",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      addr_range: [{
        base_addr: "0x80102000",
        size_byte: "0x00001000",
      }],
    },
    { name:  "uart3", // UART 3 for mikroBUS Click
      type:  "device",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      addr_range: [{
        base_addr: "0x80103000",
        size_byte: "0x00001000",
      }],
    },
    { name:  "uart4", // UART 4 for RS-232
      type:  "device",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      addr_range: [{
        base_addr: "0x80104000",
        size_byte: "0x00001000",
      }],
    },
    { name:  "i2c0", // I2C bus 0
      type:  "device",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      addr_range: [{
        base_addr: "0x80200000",
        size_byte: "0x00001000",
      }],
    },
    { name:  "i2c1", // I2C bus 1
      type:  "device",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      addr_range: [{
        base_addr: "0x80201000",
        size_byte: "0x00001000",
      }],
    },
    { name:  "spi_flash", // Serial peripheral interface for flash memory
      type:  "device",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      addr_range: [{
        base_addr: "0x80300000",
        size_byte: "0x00001000",
      }],
    },
    { name:  "spi_lcd", // Serial peripheral interface for LCD screen
      type:  "device",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      addr_range: [{
        base_addr: "0x80301000",
        size_byte: "0x00001000",
      }],
    },
    { name:  "spi_eth", // Serial peripheral interface for Ethernet MAC
      type:  "device",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      addr_range: [{
        base_addr: "0x80302000",
        size_byte: "0x00001000",
      }],
    },
    { name:  "spi_rp0", // Serial peripheral interface for R-Pi header
      type:  "device",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      addr_range: [{
        base_addr: "0x80303000",
        size_byte: "0x00001000",
      }],
    },
    { name:  "spi_rp1", // Serial peripheral interface for R-Pi header
      type:  "device",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      addr_range: [{
        base_addr: "0x80304000",
        size_byte: "0x00001000",
      }],
    },
    { name:  "spi_ard", // Serial peripheral interface for Arduino shield
      type:  "device",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      addr_range: [{
        base_addr: "0x80305000",
        size_byte: "0x00001000",
      }],
    },
    { name:  "spi_mkr", // Serial peripheral interface for mikro BUS
      type:  "device",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      addr_range: [{
        base_addr: "0x80306000",
        size_byte: "0x00001000",
      }],
    },
    { name:  "usbdev", // USB device
      type:  "device",
      clock: "clk_usb_i",
      reset: "rst_usb_ni",
      xbar:  false,
      addr_range: [{
        base_addr: "0x80400000",
        size_byte: "0x00001000",
      }],
    },
    { name:  "rv_plic", // RISC-V platform interrupt controller
      type:  "device",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      addr_range: [{
        // This block is overaligned to 0x0800_0000 bytes since OpenTitan RV_PLIC block expects it.
        base_addr: "0x88000000",
        size_byte: "0x04000000",
      }],
    },
  ],
  connections: {
    ibex_lsu: [
      "sram",
      "hyperram",
      "rev_tag",
      "gpio",
      "pwm",
      "rpi_gpio",
      "ard_gpio",
      "pmod_gpio",
      "rgbled_ctrl",
      "hw_rev",
      "timer",
      "uart0",
      "uart1",
      "uart2",
      "uart3",
      "uart4",
      "i2c0",
      "i2c1",
      "spi_flash",
      "spi_lcd",
      "spi_eth",
      "spi_rp0",
      "spi_rp1",
      "spi_ard",
      "spi_mkr",
      "usbdev",
      "rv_plic",
    ],
    dbg_host: ["sram"],
  },
}
