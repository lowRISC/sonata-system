// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0

{ name: "peri",
  type: "xbar",
  clock: "clk_sys_i", // Main clock, used in sockets
  clock_connections: {
    clk_sys_i: "main",
  },
  reset: "rst_sys_ni",
  reset_connections: {
    rst_sys_ni: "sys",
  },
  nodes: [
    { name:  "main",
      type:  "host",
      // addr_space: "hart",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  true,
      pipeline: false,
    },
    { name:  "gpio", // General purpose input and output
      type:  "device",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      addr_range: [{
        base_addr: "0x80000000",
        size_byte: "0x00001000",
      }],
    },
    { name:  "pinmux", // Pin multiplexer
      type:  "device",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      addr_range: [{
        base_addr: "0x80005000",
        size_byte: "0x00001000",
      }],
    },
    { name:  "rgbled_ctrl", // RGB LED Controller
      type:  "device",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      addr_range: [{
        base_addr: "0x80009000",
        size_byte: "0x00001000",
      }],
    },
    { name:  "hw_rev", // Hardware revoker control register
      type:  "device",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      addr_range: [{
        base_addr: "0x8000A000",
        size_byte: "0x00001000",
      }],
    },
    { name:  "xadc", // XADC
      type:  "device",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      addr_range: [{
        base_addr: "0x8000B000",
        size_byte: "0x00001000",
      }],
    },
    { name:  "system_info", // System information
      type:  "device",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      addr_range: [{
        base_addr: "0x8000C000",
        size_byte: "0x00001000",
      }],
    },
    { name:  "timer", // Interrupt timer
      type:  "device",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      addr_range: [{
        base_addr: "0x80040000",
        size_byte: "0x00010000",
      }],
    },
    % for block in config.blocks:
    % if block.name != "gpio" and block.which_xbar == "peri":
    % for i in range(block.instances):
    { name:  "${f"{block.name}{i}"}",
      type:  "device",
      clock: "clk_sys_i",
      reset: "rst_sys_ni",
      xbar:  false,
      addr_range: [{
        base_addr: "${hex(block.memory_start + i * block.memory_size)}",
        size_byte: "${hex(block.memory_size)}",
      }],
      % for (setting, value) in block.xbar.items():
      ${setting}: ${value},
      % endfor
    },
    % endfor
    % endif
    % endfor
  ],
  connections: {
    main: [
      "gpio",
      "pinmux",
      "system_info",
      "rgbled_ctrl",
      "hw_rev",
      "xadc",
      "timer",
      % for block in config.blocks:
      % if block.name != "gpio" and block.which_xbar == "peri":
      % for i in range(block.instances):
      "${f"{block.name}{i}"}",
      % endfor
      % endif
      % endfor
    ],
  },
}
