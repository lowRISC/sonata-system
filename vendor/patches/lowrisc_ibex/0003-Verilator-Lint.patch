diff --git a/rtl/cheri_decoder.sv b/rtl/cheri_decoder.sv
index c35b438..22eec3e 100644
--- a/rtl/cheri_decoder.sv
+++ b/rtl/cheri_decoder.sv
@@ -6,6 +6,9 @@
 // should we merge this with cheri_EX? let's leave it alone for now since we may look into
 // a separate decoder PL stage later
 
+//TODO actually fix lint issues
+/* verilator lint_off UNOPTFLAT */
+
 module cheri_decoder import cheri_pkg::*; # (
   parameter bit CheriPPLBC = 1'b1,
   parameter bit CheriSBND2 = 1'b0
@@ -33,7 +36,7 @@ module cheri_decoder import cheri_pkg::*; # (
   output logic            cheri_multicycle_dec_o
   );
 
-  logic  [6:0] opcode;
+  logic  [6:0] unused_opcode;
   logic  [2:0] func3_op;
   logic  [6:0] func7_op;
   logic  [4:0] imm5_op;
@@ -44,14 +47,14 @@ module cheri_decoder import cheri_pkg::*; # (
   //  - fmt2: R-format, func3(14:12) = 0x0, func7(31:25) = subFunc, etc.
   //  - fmt3: I-format, func3(14:12) = 0x0, func7(31:25) = 0x7f, imm5(24:20) = subFunc
   //  - opcode [6:0] == 0x5b for all CHERI instructions
-  assign opcode   = instr_rdata_i[6:0];
+  assign unused_opcode   = instr_rdata_i[6:0];
   assign func3_op = instr_rdata_i[14:12];
   assign func7_op = instr_rdata_i[31:25];
   assign imm5_op  = instr_rdata_i[24:20];
   assign rd_op    = instr_rdata_i[11:7];
 
   always_comb begin
-    cheri_operator_o = 32'h0;
+    cheri_operator_o = OPDW'('h0);
 
     cheri_operator_o[CCSR_RW]         = cheri_opcode_en_i && (func3_op==0) && (func7_op==7'h01);
     cheri_operator_o[CSET_BOUNDS]     = cheri_opcode_en_i && (func3_op==0) && (func7_op==7'h08);
@@ -125,3 +128,5 @@ module cheri_decoder import cheri_pkg::*; # (
                                    cheri_operator_o[CRRL] | cheri_operator_o[CRAM]));
 
 endmodule
+
+/* verilator lint_off UNOPTFLAT */
diff --git a/rtl/cheri_ex.sv b/rtl/cheri_ex.sv
index 76bf177..6f57f1a 100644
--- a/rtl/cheri_ex.sv
+++ b/rtl/cheri_ex.sv
@@ -2,6 +2,11 @@
 // Licensed under the Apache License, Version 2.0, see LICENSE for details.
 // SPDX-License-Identifier: Apache-2.0
 
+//TODO actually fix lint errors
+/* verilator lint_off WIDTH */
+/* verilator lint_off UNUSED */
+/* verilator lint_off UNDRIVEN */
+
 module cheri_ex import cheri_pkg::*; #(
   parameter bit          WritebackStage = 1'b0,
   parameter int unsigned HeapBase,
@@ -726,13 +731,13 @@ module cheri_ex import cheri_pkg::*; #(
     setbounds_outcap = set_bounds(tfcap3, tmp_addr, bound_req2, req_exact);
   end
 
-  if (CheriSBND2) begin
-    always_ff @(posedge clk_i or negedge rst_ni) begin
-      if (!rst_ni) begin
-        bound_req2      <= '{0, 0, 0};
-        set_bounds_done <= 1'b0;
-      end else begin
-        bound_req2      <= bound_req1;
+  always_ff @(posedge clk_i or negedge rst_ni) begin
+    if (!rst_ni) begin
+      bound_req2      <= '{0, 0, 0};
+      set_bounds_done <= 1'b0;
+    end else begin
+      bound_req2      <= bound_req1;
+      if (CheriSBND2) begin
         // set_bounds_done is asserted in the 2nd cycle of execution when SBD2 == 1
         // note in ibex it actaully is ok to hold set_bounds_done high for both cycles
         // since the multicycle control logic won't look at ex_valid till the 2nd cycle
@@ -740,11 +745,10 @@ module cheri_ex import cheri_pkg::*; #(
         set_bounds_done <= (cheri_operator_i[CSET_BOUNDS] | cheri_operator_i[CSET_BOUNDS_IMM] |
                             cheri_operator_i[CSET_BOUNDS_EX] | cheri_operator_i[CRRL] | 
                             cheri_operator_i[CRAM]) & cheri_exec_id_i & ~set_bounds_done ;
+      end else begin
+        set_bounds_done <= 1'b1;
       end
     end
-  end else begin
-    assign bound_req2      = bound_req1;
-    assign set_bounds_done = 1'b1;
   end
 
 
@@ -1280,5 +1284,8 @@ end
                         result_cap_o.otype, result_cap_o.cperms,     // 41:32
                         result_data_o};                              // 31:0
 
-
 endmodule
+
+/* verilator lint_on WIDTH */
+/* verilator lint_on UNUSED */
+/* verilator lint_on UNDRIVEN */
diff --git a/rtl/cheri_pkg.sv b/rtl/cheri_pkg.sv
index edcb404..aaa6c71 100644
--- a/rtl/cheri_pkg.sv
+++ b/rtl/cheri_pkg.sv
@@ -2,6 +2,10 @@
 // Licensed under the Apache License, Version 2.0, see LICENSE for details.
 // SPDX-License-Identifier: Apache-2.0
 
+//TODO actually fix the lint errors
+/* verilator lint_off WIDTH */
+/* verilator lint_off UNUSED */
+
 package cheri_pkg;
 
   // bit field widths
@@ -883,3 +887,6 @@ $display("--- set_bounds:  b1 = %x, t1 = %x, b2 = %x, t2 = %x", base1, top1, bas
   endfunction
  
 endpackage
+
+/* verilator lint_on WIDTH */
+/* verilator lint_on UNUSED */
diff --git a/rtl/cheri_regfile.sv b/rtl/cheri_regfile.sv
index d777250..ff334b8 100644
--- a/rtl/cheri_regfile.sv
+++ b/rtl/cheri_regfile.sv
@@ -3,6 +3,10 @@
 // Licensed under the Apache License, Version 2.0, see LICENSE for details.
 // SPDX-License-Identifier: Apache-2.0
 
+//TODO actually fix the lint errors
+/* verilator lint_off WIDTH */
+/* verilator lint_off UNUSED */
+
 module cheri_regfile import cheri_pkg::*; #(
   parameter int unsigned NREGS      = 32,
   parameter int unsigned NCAPS      = 32,
@@ -354,3 +358,6 @@ module cheri_regfile import cheri_pkg::*; #(
 
 
 endmodule
+
+/* verilator lint_on WIDTH */
+/* verilator lint_on UNUSED */
diff --git a/rtl/cheri_tbre_wrapper.sv b/rtl/cheri_tbre_wrapper.sv
index bce0c31..7af03fa 100644
--- a/rtl/cheri_tbre_wrapper.sv
+++ b/rtl/cheri_tbre_wrapper.sv
@@ -2,6 +2,8 @@
 // Licensed under the Apache License, Version 2.0, see LICENSE for details.
 // SPDX-License-Identifier: Apache-2.0
 
+//TODO actually fix lint errors
+/* verilator lint_off UNUSED */
 
 module cheri_tbre_wrapper import cheri_pkg::*; #(
   parameter bit          CHERIoTEn   = 1'b1,
@@ -81,7 +83,7 @@ module cheri_tbre_wrapper import cheri_pkg::*; #(
 
   logic          tbre_stat, tbre_err, stkz_err;
 
-  assign mmreg_coreout_o = {{(MMRegDoutW-2){1'b0}}, stkz_err, tbre_err, tbre_stat};
+  assign mmreg_coreout_o = {{(MMRegDoutW-3){1'b0}}, stkz_err, tbre_err, tbre_stat};
 
   if (CHERIoTEn & CheriTBRE) begin : g_tbre
     logic [65:0] tbre_ctrl_vec;
@@ -189,7 +191,10 @@ module cheri_tbre_wrapper import cheri_pkg::*; #(
   for (genvar i = 0; i < nMSTR; i++) begin
     logic [7:0] pri_mask;
     assign pri_mask = 8'hff >> (8-i);      // max 8 masters, should be enough 
+    //TODO assert that nMSTR is les than or equal to 8
+    /* verilator lint_off WIDTH */
     assign mstr_arbit[i] = mstr_req[i] & ~(|(mstr_req & pri_mask));
+    /* verilator lint_on WIDTH */
   end
 
   // make the next arbiration decision immediately when receiving grant so that
@@ -236,3 +241,5 @@ module cheri_tbre_wrapper import cheri_pkg::*; #(
 
 
 endmodule
+
+/* verilator lint_on UNUSED */
diff --git a/rtl/cheri_trvk_stage.sv b/rtl/cheri_trvk_stage.sv
index 0b92388..5c6cebc 100644
--- a/rtl/cheri_trvk_stage.sv
+++ b/rtl/cheri_trvk_stage.sv
@@ -2,6 +2,10 @@
 // Licensed under the Apache License, Version 2.0, see LICENSE for details.
 // SPDX-License-Identifier: Apache-2.0
 
+//TODO actually fix lint issues
+/* verilator lint_off WIDTH */
+/* verilator lint_off UNUSED */
+
 module cheri_trvk_stage #(
   parameter int unsigned HeapBase,
   parameter int unsigned TSMapSize
@@ -101,7 +105,9 @@ module cheri_trvk_stage #(
       bitpos_q        <= 0;
       trvk_status     <= 1'b0;
       range_ok_q      <= 0;
-      trsv_addr_q     <= {'0, '0, '0};
+      trsv_addr_q[0]  <= 5'b0;
+      trsv_addr_q[1]  <= 5'b0;
+      trsv_addr_q[2]  <= 5'b0;
     end else begin
       // control signal per stage
       cpu_op_valid_q  <= {cpu_op_valid_q[1:0], cpu_op_valid};
@@ -128,3 +134,6 @@ module cheri_trvk_stage #(
   end
 
 endmodule
+
+/* verilator lint_on WIDTH */
+/* verilator lint_on UNUSED */
diff --git a/rtl/ibex_controller.sv b/rtl/ibex_controller.sv
index 586464d..0d0d53b 100644
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -11,6 +11,10 @@
  * Main controller of the processor
  */
 
+//TODO actually fix lint errors
+/* verilator lint_off WIDTH */
+/* verilator lint_off UNUSED */
+
 `include "prim_assert.sv"
 `include "dv_fcov_macros.svh"
 
@@ -992,3 +996,6 @@ module ibex_controller #(
   `endif
 
 endmodule
+
+/* verilator lint_on WIDTH */
+/* verilator lint_on UNUSED */
diff --git a/rtl/ibex_core.sv b/rtl/ibex_core.sv
index 4cfe378..c876c22 100644
--- a/rtl/ibex_core.sv
+++ b/rtl/ibex_core.sv
@@ -13,6 +13,9 @@
 
 `include "prim_assert.sv"
 
+//TODO actually fix lints
+/* verilator lint_off UNUSED */
+
 /**
  * Top level module of the ibex RISC-V core
  */
@@ -427,7 +430,12 @@ module ibex_core import ibex_pkg::*; import cheri_pkg::*; #(
   logic [10:0]   cheri_ex_err_info;
   logic          cheri_wb_err;
   logic [10:0]   cheri_wb_err_info;
+
+  /* verilator lint_off UNOPTFLAT */
+  /* verilator lint_off IMPERFECTSCH */
   logic [OPDW-1:0] cheri_operator;
+  /* verilator lint_on UNOPTFLAT */
+  /* verilator lint_on IMPERFECTSCH */
 
   logic          rv32_lsu_req;
   logic          rv32_lsu_we;
@@ -2299,3 +2307,5 @@ end
   `ASSERT_INIT(IllegalParamSecure, !(SecureIbex && (RV32M == RV32MNone)))
 
 endmodule
+
+/* verilator lint_on UNUSED */
diff --git a/rtl/ibex_cs_registers.sv b/rtl/ibex_cs_registers.sv
index d2a89e1..9ab716b 100644
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -16,6 +16,9 @@
 
 `include "prim_assert.sv"
 
+//TODO fix lint errors
+/* verilator lint_off UNUSED */
+
 module ibex_cs_registers import cheri_pkg::*;  #(
   parameter bit               DbgTriggerEn      = 0,
   parameter int unsigned      DbgHwBreakNum     = 1,
@@ -1952,3 +1955,5 @@ module ibex_cs_registers import cheri_pkg::*;  #(
   end
 
 endmodule
+
+/* verilator lint_on UNUSED */
diff --git a/rtl/ibex_id_stage.sv b/rtl/ibex_id_stage.sv
index 0a95ad2..270623f 100644
--- a/rtl/ibex_id_stage.sv
+++ b/rtl/ibex_id_stage.sv
@@ -1168,7 +1168,6 @@ module ibex_id_stage import cheri_pkg::*; #(
     logic unused_outstanding_store_wb;
     logic unused_wb_exception;
     logic [31:0] unused_rf_wdata_fwd_wb;
-    logic unused_id_exception;
 
     assign unused_data_req_done_ex     = lsu_req_done_i;
     assign unused_rf_waddr_wb          = rf_waddr_wb_i;
@@ -1177,7 +1176,6 @@ module ibex_id_stage import cheri_pkg::*; #(
     assign unused_outstanding_store_wb = outstanding_store_wb_i;
     assign unused_wb_exception         = wb_exception;
     assign unused_rf_wdata_fwd_wb      = rf_wdata_fwd_wb_i;
-    assign unused_id_exception         = id_exception;
 
     assign instr_type_wb_o = WB_INSTR_OTHER;
     assign stall_wb        = 1'b0;
@@ -1187,6 +1185,9 @@ module ibex_id_stage import cheri_pkg::*; #(
     assign instr_id_done_o = instr_done;
   end
 
+  logic unused_id_exception;
+  assign unused_id_exception         = id_exception;
+
   // Signal which instructions to count as retired in minstret, all traps along with ebrk and
   // ecall instructions are not counted.
   assign instr_perf_count_id_o = ~ebrk_insn & ~ecall_insn_dec & ~illegal_insn_dec &
diff --git a/rtl/ibex_if_stage.sv b/rtl/ibex_if_stage.sv
index 443ed73..f6bdd82 100644
--- a/rtl/ibex_if_stage.sv
+++ b/rtl/ibex_if_stage.sv
@@ -16,6 +16,9 @@
 
 `include "prim_assert.sv"
 
+//TODO actually fix lints
+/* verilator lint_off UNUSED */
+
 module ibex_if_stage import ibex_pkg::*; import cheri_pkg::*; #(
   parameter int unsigned DmHaltAddr        = 32'h1A110800,
   parameter int unsigned DmExceptionAddr   = 32'h1A110808,
@@ -780,3 +783,5 @@ module ibex_if_stage import ibex_pkg::*; import cheri_pkg::*; #(
   `ASSERT(IbexInstrAddrUnaligned, instr_req_o |-> (instr_addr_o[1:0] == 2'b00))
 
 endmodule
+
+/* verilator lint_on UNUSED */
diff --git a/rtl/ibex_load_store_unit.sv b/rtl/ibex_load_store_unit.sv
index 802187e..868c4ad 100644
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -392,8 +392,8 @@ module ibex_load_store_unit import cheri_pkg::*; #(
   always_comb begin
     unique case (data_type_q)
       2'b00:       data_rdata_ext = rdata_w_ext;
-      2'b01:       data_rdata_ext = rdata_h_ext;
-      2'b10,2'b11: data_rdata_ext = rdata_b_ext;
+      2'b01:       data_rdata_ext = {1'b0, rdata_h_ext};
+      2'b10,2'b11: data_rdata_ext = {1'b0, rdata_b_ext};
       default:     data_rdata_ext = rdata_w_ext;
     endcase // case (data_type_q)
   end
diff --git a/rtl/ibex_top.sv b/rtl/ibex_top.sv
index b91a22f..4de0533 100644
--- a/rtl/ibex_top.sv
+++ b/rtl/ibex_top.sv
@@ -9,6 +9,9 @@
 
 `include "prim_assert.sv"
 
+//TODO fix lint issues
+/* verilator lint_off UNUSED */
+
 /**
  * Top level module of the ibex RISC-V core
  */
@@ -1227,3 +1230,5 @@ module ibex_top import ibex_pkg::*; import cheri_pkg::*; #(
   `ASSERT_KNOWN(IbexDebugReqX, debug_req_i)
   `ASSERT_KNOWN(IbexFetchEnableX, fetch_enable_i)
 endmodule
+
+/* verilator lint_on UNUSED */
diff --git a/rtl/ibexc_top.sv b/rtl/ibexc_top.sv
index 3877016..78df2df 100644
--- a/rtl/ibexc_top.sv
+++ b/rtl/ibexc_top.sv
@@ -13,11 +13,14 @@
 
 `include "prim_assert.sv"
 
+//TODO actualy fix the lints
+/* verilator lint_off UNUSED */
+/* verilator lint_off UNDRIVEN */
 
 /**
  * Top level module of the ibex RISC-V core
  */
-module ibex_top import ibex_pkg::*; import cheri_pkg::*; #(
+module ibexc_top import ibex_pkg::*; import cheri_pkg::*; #(
   parameter int unsigned DmHaltAddr       = 32'h1A110800,
   parameter int unsigned DmExceptionAddr  = 32'h1A110808,
   parameter bit          DbgTriggerEn     = 1'b1,
@@ -371,7 +374,7 @@ module ibex_top import ibex_pkg::*; import cheri_pkg::*; #(
 
     .fetch_enable_i(fetch_enable_buf),
     .alert_minor_o(alert_minor_o),
-    .alert_major_o(alert_major_o),
+    .alert_major_o(),
     .icache_inval_o(),
     .core_busy_o   (core_busy_d),
     .ic_scr_key_valid_i (1'b0),
@@ -487,3 +490,6 @@ module ibex_top import ibex_pkg::*; import cheri_pkg::*; #(
   `ASSERT_KNOWN(IbexDebugReqX, debug_req_i)
   `ASSERT_KNOWN(IbexFetchEnableX, fetch_enable_i)
 endmodule
+
+/* verilator lint_on UNUSED */
+/* verilator lint_on UNDRIVEN */
diff --git a/rtl/ibex_cs_registers.sv b/rtl/ibex_cs_registers.sv
index 842385e..2328de5 100644
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -174,7 +174,7 @@ module ibex_cs_registers import cheri_pkg::*;  #(
     | (0                 << 13)  // N - User level interrupts supported
     | (0                 << 18)  // S - Supervisor mode implemented
     | (1                 << 20)  // U - User mode implemented
-    | (CHERIoTEn         << 23)  // X - Non-standard extensions present
+    | (32'(CHERIoTEn)    << 23)  // X - Non-standard extensions present
     | (32'(CSR_MISA_MXL) << 30); // M-XLEN
 
   typedef struct packed {
