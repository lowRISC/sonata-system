// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0

/*
 * This file is autogenerated by the tool zermio.
 */

#pragma once

#include <cstdint>
namespace platform {
/* Addresses for the devices of the type Uart.*/
enum Uart : uintptr_t {
  Uart0 = 0x80100000,
  Uart1 = 0x80100020,
};

/* Addresses for the devices of the type Spi.*/
enum Spi : uintptr_t {
  Spi0        = 0x80302000,
  SpiEthernet = 0x80301000,
  SpiLcd      = 0x80300000,
  Spi1        = 0x80303000,
  Spi2        = 0x80304000,
};

/* Addresses for the devices of the type Pwm.*/
enum Pwm : uintptr_t {
  Pwm0   = 0x80001000,
  Pwm1   = 0x80001008,
  Pwm2   = 0x80001010,
  Pwm3   = 0x80001018,
  Pwm4   = 0x80001020,
  Pwm5   = 0x80001028,
  PwmLcd = 0x80001030,
};

/* Addresses for the devices of the type Timer.*/
enum Timer : uintptr_t {
  Timer0 = 0x80040000,
};

/* Addresses for the devices of the type Gpio.*/
enum Gpio : uintptr_t {
  Gpio0       = 0x80000000,
  GpioRpi     = 0x80000040,
  GpioArduino = 0x80000080,
  GpioPmod0   = 0x800000c0,
  GpioPmod1   = 0x80000100,
  GpioPmodc   = 0x80000140,
};

/* Addresses for the devices of the type I2c.*/
enum I2c : uintptr_t {
  I2c0 = 0x80200000,
  I2c1 = 0x80201000,
};

/* Addresses for the devices of the type Usbdev.*/
enum Usbdev : uintptr_t {
  Usbdev = 0x80400000,
};

enum Interrupt : uintptr_t {
  Uart0TransmitWatermark   = 1,
  Uart0ReceiveWatermark    = 2,
  Uart0TransmitEmpty       = 3,
  Uart0ReceiveOverflow     = 4,
  Uart0ReceiveFrameError   = 5,
  Uart0ReceiveBreakError   = 6,
  Uart0ReceiveTimeout      = 7,
  Uart0ReceiveParityError  = 8,
  Uart1TransmitWatermark   = 9,
  Uart1ReceiveWatermark    = 10,
  Uart1TransmitEmpty       = 11,
  Uart1ReceiveOverflow     = 12,
  Uart1ReceiveFrameError   = 13,
  Uart1ReceiveBreakError   = 14,
  Uart1ReceiveTimeout      = 15,
  Uart1ReceiveParityError  = 16,
  I2c0FormatFifoThreshold  = 17,
  I2c0ReceiveFifoThreshold = 18,
  I2c0AcquireFifoThreshold = 19,
  I2c0ReceiveFifoOverflow  = 20,
  I2c0ReceivedNack         = 21,
  I2c0SclInterference      = 22,
  I2c0SdaInterference      = 23,
  I2c0StretchTimeout       = 24,
  I2c0SdaUnstable          = 25,
  I2c0CommandComplete      = 26,
  I2c0TransmitStretch      = 27,
  I2c0TransmitThreshold    = 28,
  I2c0AcquireFifoFull      = 29,
  I2c0UnexpectedStop       = 30,
  I2c0HostTimeout          = 31,
  I2c1FormatFifoThreshold  = 32,
  I2c1ReceiveFifoThreshold = 33,
  I2c1AcquireFifoThreshold = 34,
  I2c1ReceiveFifoOverflow  = 35,
  I2c1ReceivedNack         = 36,
  I2c1SclInterference      = 37,
  I2c1SdaInterference      = 38,
  I2c1StretchTimeout       = 39,
  I2c1SdaUnstable          = 40,
  I2c1CommandComplete      = 41,
  I2c1TransmitStretch      = 42,
  I2c1TransmitThreshold    = 43,
  I2c1AcquireFifoFull      = 44,
  I2c1UnexpectedStop       = 45,
  I2c1HostTimeout          = 46,
};
}  // namespace platform
